services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./initdbs.sql:/docker-entrypoint-initdb.d/initdbs.sql
      - postgres-data:/var/lib/postgresql/data

  clickhouse:
    image: clickhouse/clickhouse-server:23.4
    restart: unless-stopped
    user: "101:101"
    container_name: clickhouse
    hostname: clickhouse
    environment:
      CLICKHOUSE_DB: uptrace
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'localhost:8123/ping']
      interval: 1s
      timeout: 1s
      retries: 30
    volumes:
      - ./config/clickhouse/config.d/config.xml:/etc/clickhouse-server/config.d/config.xml
      - ./config/clickhouse/users.d/users.xml:/etc/clickhouse-server/users.d/users.xml
      - ch_data:/var/lib/clickhouse
    ports:
      - '8123:8123'
      - '9000:9000'

  uptrace:
    image: uptrace/uptrace:1.5.3
    restart: unless-stopped
    depends_on:
      - clickhouse
      - db
    volumes:
      - ./config/uptrace/uptrace.yml:/etc/uptrace/uptrace.yml
    #environment:
    #  - DEBUG=2
    ports:
      - '14317:14317'
      - '14318:14318'

  otelcol:
    image: otel/opentelemetry-collector-contrib:0.70.0
    restart: unless-stopped
    user: '0:0' # required for logs
    depends_on:
      - uptrace
      - clickhouse
      - db
    volumes:
      - ./config/otel/otel-collector.yaml:/etc/otelcol-contrib/config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log:ro
    ports:
      - '4317:4317'
      - '4318:4318'

  vector:
    image: timberio/vector:0.28.X-alpine
    restart: unless-stopped
    depends_on:
      - uptrace
      - clickhouse
      - db
    volumes:
      - ./config/vector/vector.toml:/etc/vector/vector.toml:ro

  grafana:
    image: grafana/grafana:9.5.3
    restart: unless-stopped
    volumes:
      - ./config/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./config/grafana/custom.ini:/etc/grafana/grafana.ini
    ports:
      - '3000:3000'
    extra_hosts:
      - 'host.docker.internal:host-gateway'


volumes:
  ch_data:
  postgres-data:
